<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="friendMapper">
 
 <resultMap type="Friend" id="friendResultSet">
	  	<result column="bf_giver" property="bfGiver"/>
		<result column="bf_taker" property="bfTaker"/>
		<result column="status" property="fStatus"/>
		<result column="request_date" property="requestDate"/>
 </resultMap>
 <resultMap type="Member" id="memberResult">
			<result column="mem_no" property="memNo"/>
			<result column="mem_id" property="memId"/>
			<result column="git_nick" property="gitNick"/>
			<result column="profile" property="profile"/>
			<result column="mem_intro" property="memIntro"/>
			<result column="stack_name" property="stackName"/>
			<result column="create_date" property="createDate"/>
			<result column="status" property="status"/>
			<result column="team" property="team"/>
			<result column="team_status" property="teamStatus"/>
		</resultMap>
 	<select id="checkFriendExists" resultType="int">
	    SELECT COUNT(*)
	    FROM friend
	    WHERE bf_giver = #{bfGiver} 
	    AND bf_taker = #{bfTaker}
	    AND status = 'A'
	</select>
 	<insert id="friendlist">
 		insert
 			into friend
 				(
 					bf_giver
 				   ,bf_taker
 				   ,status
 				   ,request_date
 				)
 			values
 				(
 				    #{bfGiver}
 				   ,#{bfTaker}
 				   ,'A'
 				   ,sysdate
 				)
 	</insert>
	 <select id="getReceivedRequests" resultType="map">
        SELECT m.git_nick AS gitNick, m.mem_intro AS memIntro, m.mem_no AS memNo
        FROM FRIEND f
        JOIN MEMBER m ON f.BF_GIVER = m.MEM_NO
        WHERE f.BF_TAKER = #{currentMemberId} AND f.STATUS = 'A'
    </select>

    <select id="getSentRequests" resultType="map">
        SELECT m.git_nick AS gitNick, m.mem_intro AS memIntro, f.status AS status
		    FROM FRIEND f
		    JOIN MEMBER m ON f.BF_TAKER = m.MEM_NO
		    WHERE f.BF_GIVER = #{currentMemberId}
    </select>
    <update id="receivefriend">
    	update friend
    	set status = #{action}
    	where BF_TAKER = #{loginmemNo}
    	and BF_GIVER = #{memNo}
    	and status = 'A'
    </update>
	<select id="friendlistselect" resultMap="memberResult">
		SELECT M.git_nick, M.mem_intro, M.stack_name
		FROM friend F
		JOIN member M
		  ON (F.bf_giver = M.mem_no OR F.bf_taker = M.mem_no)
		WHERE ((F.bf_giver = #{memNo} AND F.status = 'Y') 
		    OR (F.bf_taker = #{memNo} AND F.status = 'Y'))
		and mem_no != #{memNo}
	</select>
</mapper>
